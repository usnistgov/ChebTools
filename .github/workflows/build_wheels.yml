name: Build

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - uses: actions/checkout@v3
      - name: checkout submodules
        run: git submodule update --init --recursive

      # Used to host cibuildwheel
      - uses: actions/setup-python@v3

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.16.2 build wheel setuptools pipx

      - name: Build sdist
        run: pipx run build --sdist
        if: runner.os == 'Windows'

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        # to supply options, put them in 'env', like:
        env:
          CIBW_ARCHS: auto64
          CIBW_ARCHS_MACOS: universal2
          CIBW_ENVIRONMENT_MACOS: MACOSX_DEPLOYMENT_TARGET=10.15
          CIBW_SKIP: "*musllinux* *pypy* *pp* *cp36* *cp37* *cp38*"

      - uses: actions/upload-artifact@v3
        with:
          path: |
            ./wheelhouse/*.whl
            ./wheelhouse/*.tar.gz

  upload_python_bindings_to_pypi:
    needs: [build_wheels]
    name: Upload to PyPi
    runs-on: ubuntu-latest
    steps:

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12.x

      - name: Download ALL wheels
        uses: actions/download-artifact@v4
        with:
          name: Python
          path: Python

      - name: Display structure of downloaded files
        run: |
          set -x
          ls -R
          du -sh

      - name: Install Python dependencies and upload
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine requests packaging
          if [[ "$GITHUB_REF" == *"refs/tags"* ]]; then
            TWINE_REPOSITORY=pypi
            TWINE_PASSWORD=${{ secrets.PYPI_TOKEN }}
          else
            TWINE_REPOSITORY=testpypi
            TWINE_PASSWORD=${{ secrets.TESTPYPI_TOKEN }}
          fi;

          echo "Using TWINE_REPOSITORY=$TWINE_REPOSITORY"
          echo "TWINE_REPOSITORY=$TWINE_REPOSITORY" >> $GITHUB_ENV
          echo "TWINE_PASSWORD=$TWINE_PASSWORD" >> $GITHUB_ENV

          python -m twine upload --skip-existing Python/*.whl Python/*.tar.gz